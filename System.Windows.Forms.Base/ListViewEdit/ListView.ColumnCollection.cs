//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;

namespace System.Windows.Forms
{
    partial class ListViewEdit
    {
        public class ColumnCollection : KeyedCollection<string, Column>
        {
            public ColumnCollection(ListView view)
            {
                Owner = view;
            }

            protected ListView Owner;
            protected int CurrentWidth;
            protected int CurrentHeight;

            public ListView View
            {
                get { return Owner; }
            }

            public int Width
            {
                get { return CurrentWidth; }
            }

            public int Height
            {
                get { return CurrentHeight; }
            }

            public Column Add(PropertyDescriptor property)
            {
                PropertyColumn c;
                Add(c = new PropertyColumn(property));
                return c;
            }

            public Column Add(SizeType sizeType, int width)
            {
                Column c;
                Add(c = OnCreateColumn(sizeType, width));
                return c;
            }

            protected virtual Column OnCreateColumn(SizeType sizeType, int width)
            {
                return new Column(sizeType, width);
            }

            protected override string GetKeyForItem(Column item)
            {
                return item.Name;
            }

            protected override void ClearItems()
            {
                base.ClearItems();
            }

            protected override void InsertItem(int index, Column item)
            {
                item.Owner = this;

                if (string.IsNullOrEmpty(item.Name) || Items.FirstOrDefault(c => c.Name.EqualsIgnoreCase(item.Name)).HasValue())
                {
                    item.Name = Items.GetName("Column", string.Empty);
                }

                base.InsertItem(index, item);
            }

            protected override void RemoveItem(int index)
            {
                base.RemoveItem(index);
            }

            protected override void SetItem(int index, Column item)
            {
                throw new NotSupportedException();
            }
        }
    }
}
