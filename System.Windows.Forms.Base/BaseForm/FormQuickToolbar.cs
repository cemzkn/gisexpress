//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms.Ribbon;

namespace System.Windows.Forms
{
    [ToolboxItem(false)]
    public class FormQuickToolbar : TablePanelEdit, IQuickToolbar
    {
        public FormQuickToolbar()
        {
            RowCount = 1;
            AutoSize = true;
            ImageSize = new Size(16, 16);
        }

        public Size ImageSize
        {
            get;
            set;
        }

        public int ButtonsCount
        {
            get { return Controls.Count; }
        }

        public RibbonToolbarButton AddButton(string name, string title, Image image, EventHandler onClick, bool beginGroup)
        {
            var button = new RibbonToolbarButton
            {
                Name = name,
                Title = title,
                Margin = new Padding(3, 3, 3, 3),
                Padding = new Padding(3, 1, 3, 1),
                ImageAlign = ContentAlignment.MiddleCenter,
                MinimumSize = new Size(ImageSize.Width + 2, ImageSize.Height + 2),
                Image = image == null ? null : BitmapExtensions.NewImage(image, ImageSize.Width, ImageSize.Height)
            };

            button.Click += onClick;

            if (beginGroup)
            {
                AddSeperator();
            }

            AddColumn(SizeType.AutoSize, 0);
            Controls.Add(button, ColumnCount - 1, 0);
            Visible = true;

            return button;
        }
    }
}
