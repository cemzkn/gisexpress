//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.ComponentModel;
using System.Linq;
using System.Windows.Forms;

namespace System.Windows.Modules.Controls
{
    [ToolboxItem(false)]
    public partial class ObjectSnapSettingsEdit : TablePanelEdit
    {
        public ObjectSnapSettingsEdit(IApplication application)
        {
            Application = application;

            Initialize();

            SnapEnabled.Checked = Application.Settings.Snap.Enabled;
            SnapEndPointEnabled.Checked = Application.Settings.Snap.EndPoint;
            SnapMidPointEnabled.Checked = Application.Settings.Snap.MidPoint;
            SnapCenterEnabled.Checked = Application.Settings.Snap.Center;

            SnapEnabled.CheckedChanged += OnSnapEnabledChanged;
            SnapEndPointEnabled.CheckedChanged += (s, e) => Application.Settings.Snap.EndPoint = SnapEndPointEnabled.Checked;
            SnapMidPointEnabled.CheckedChanged += (s, e) => Application.Settings.Snap.MidPoint = SnapMidPointEnabled.Checked;
            SnapCenterEnabled.CheckedChanged += (s, e) => Application.Settings.Snap.Center = SnapCenterEnabled.Checked;

            OnSnapEnabledChanged(SnapEnabled, EventArgs.Empty);
        }

        protected readonly IApplication Application;

        protected CheckEdit SnapEnabled;
        protected CheckEdit SnapEndPointEnabled;
        protected CheckEdit SnapMidPointEnabled;
        protected CheckEdit SnapCenterEnabled;

        protected void OnSnapEnabledChanged(object sender, EventArgs e)
        {
            Application.Settings.Snap.Enabled = SnapEnabled.Checked;
            SnapEndPointEnabled.Enabled = SnapMidPointEnabled.Enabled = SnapCenterEnabled.Enabled = SnapEnabled.Checked;
        }

        void Initialize()
        {
            TransparentHit = false;
            BackColor = ApplicationAppereance.Colors.Control;

            AddRow(SizeType.Absolute, 10);
            AddRow(SizeType.Absolute, 24);
            AddRow(SizeType.Absolute, 24);
            AddRow(SizeType.Absolute, 24);
            AddRow(SizeType.Absolute, 10);
            AddRow(SizeType.Absolute, 24);
            AddRow(SizeType.Absolute, 10);

            AddColumn(SizeType.Absolute, 16);
            AddColumn(SizeType.Absolute, 120);
            AddColumn(SizeType.Absolute, 36);

            Controls.Add(SnapEndPointEnabled = new CheckEdit { Dock = DockStyle.Fill }, 1, 1);
            Controls.Add(SnapMidPointEnabled = new CheckEdit { Dock = DockStyle.Fill }, 1, 2);
            Controls.Add(SnapCenterEnabled = new CheckEdit { Dock = DockStyle.Fill }, 1, 3);
            Controls.Add(new HorizontalLine { Padding = new Padding(0) }, 1, 4);
            Controls.Add(SnapEnabled = new CheckEdit { Dock = DockStyle.Fill }, 1, 5);

            Localization.Register(this, (e) => SnapEnabled.Text = e("SnapEnabled.Text"));
            Localization.Register(this, (e) => SnapEndPointEnabled.Text = e("SnapEndPointEnabled.Text"));
            Localization.Register(this, (e) => SnapMidPointEnabled.Text = e("SnapMidPointEnabled.Text"));
            Localization.Register(this, (e) => SnapCenterEnabled.Text = e("SnapCenterEnabled.Text"));

            Width = (int)ColumnStyles.Cast<ColumnStyle>().Sum(e => e.Width);
            Height = (int)RowStyles.Cast<RowStyle>().Sum(e => e.Height);
        }
    }
}
