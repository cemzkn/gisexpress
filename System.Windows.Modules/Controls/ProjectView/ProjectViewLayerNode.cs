////////////////////////////////////////////////////////////////////////////////////////////////////
////
////  Copyright © GISExpress 2015-2022. All Rights Reserved.
////  
////  GISExpress .NET API and Component Library
////  
////  The entire contents of this file is protected by local and International Copyright Laws.
////  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
////  the code contained in this file is strictly prohibited and may result in severe civil and 
////  criminal penalties and will be prosecuted to the maximum extent possible under the law.
////  
////  RESTRICTIONS
////  
////  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
////  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
////  
////  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
////  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
////  AND PERMISSION FROM GISExpress
////  
////  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
////  
////  Warning: This content was generated by GISExpress tools.
////  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
////
/////////////////////////////////////////////////////////////////////////////////////////////////////

//using System.Drawing;
//using System.Drawing.Drawing2D;
//using System.Windows.Forms;
//using System.Workspace;

//namespace System.Windows.Modules.Controls
//{
//    [Serializable]
//    public class ProjectViewLayerNode : ProjectViewNode
//    {
//        public ProjectViewLayerNode(IProjectView view, MapLayer layer)
//            : base(view, layer)
//        {
//            Name = layer.Id.ToString();
//            Text = layer.Name;
//            ImageKey = Name;
//            SelectedImageKey = Name;
//            View.AddImage(Name, layer.GetIcon(16));

//            if (layer.SupportStyles)
//            {
//                layer.Styles.Default.PolyStyle.Changed += OnStyleChanged;

//                foreach (PaintStyle item in layer.Styles)
//                {
//                    Nodes.Add(new ProjectViewDrawingStyleNode(View, layer, item));
//                }
//            }
//        }

//        public MapLayer Layer
//        {
//            get { return Tag as MapLayer; }
//        }

//        protected bool DropAfter;
//        protected Rectangle RadioEditBounds;
//        protected Rectangle CheckEditBounds;
//        protected Rectangle LayerEditBounds;

//        public override bool AllowDrop
//        {
//            get { return OSEnvironment.IsMac == false; }
//        }

//        public override int PaddingRight
//        {
//            get { return 70; }
//        }

//        protected void OnStyleChanged(Style value)
//        {
//            View.AddImage(Layer.Id.ToStringN(), Layer.GetIcon(16));
//        }

//        protected internal override void OnDragEnter(DragEventArgs e, ProjectViewNode source)
//        {
//            var n = source as ProjectViewLayerNode;

//            if (n.HasValue() && n.Layer.CanRemove)
//            {
//                e.Effect = DragDropEffects.Move;
//            }
//            else
//            {
//                e.Effect = DragDropEffects.None;
//            }
//        }

//        protected internal override void OnDragOver(DragEventArgs e, ProjectViewNode source)
//        {
//            if (TreeView.HasValue())
//            {
//                var n = source as ProjectViewLayerNode;

//                if (n.HasValue() && n.Layer.CanRemove)
//                {
//                    using (Graphics g = TreeView.CreateGraphics())
//                    {
//                        g.SetHighQuality();

//                        using (var pen = new Pen(SystemColors.ControlDarkDark, 2))
//                        {
//                            Point location = TreeView.PointToClient(Cursor.Position);

//                            using (var path = new GraphicsPath())
//                            {
//                                DropAfter = (Bounds.Top + Bounds.Bottom) / 2 < location.Y;

//                                int y = DropAfter ? Bounds.Bottom - 1 : Bounds.Top - 1;
//                                int x1 = Bounds.Left - 16;
//                                int x2 = TreeView.Width - 32;

//                                path.StartFigure();
//                                path.AddLine(x1, y, x2, y);
//                                g.TryDrawPath(pen, path);

//                                path.Reset();
//                                path.StartFigure();
//                                path.AddLine(x2, y - 3, x2, y + 3);
//                                path.AddLine(x2, y + 3, x2 - 4, y);
//                                path.AddLine(x2 - 4, y, x2, y - 3);
//                                path.CloseFigure();

//                                path.StartFigure();
//                                path.AddLine(x1, y - 3, x1, y + 3);
//                                path.AddLine(x1, y + 3, x1 + 4, y);
//                                path.AddLine(x1 + 4, y, x1, y - 3);
//                                path.CloseFigure();

//                                g.TryDrawPath(pen, path);
//                            }
//                        }
//                    }

//                    e.Effect = DragDropEffects.Move;
//                }
//                else
//                {
//                    e.Effect = DragDropEffects.None;
//                }
//            }
//        }

//        protected internal override void OnDragDrop(DragEventArgs e, ProjectViewNode source)
//        {
//            var n = source as ProjectViewLayerNode;

//            if (n.HasValue())
//            {
//                if (DropAfter)
//                {
//                    Layer.InsertAfter(n.Layer);
//                }
//                else
//                {
//                    Layer.InsertBefore(n.Layer);
//                }
//            }
//        }

//        protected override void OnDrawNode(object sender, DrawTreeNodeEventArgs e)
//        {
//            if (e.Node == this)
//            {
//                if (!Equals(Text, Layer.Name))
//                {
//                    Text = Layer.Name;
//                }

//                CheckEditBounds.X = View.WorkingArea.Right - 24;
//                CheckEditBounds.Y = e.Bounds.Y + (e.Bounds.Height - 16) / 2;
//                CheckEditBounds.Width = 16;
//                CheckEditBounds.Height = 16;

//                e.Graphics.DrawCheckBox(CheckEditBounds, true, Layer.Open);

//                RadioEditBounds.X = View.WorkingArea.Right - 42;
//                RadioEditBounds.Y = e.Bounds.Y + (e.Bounds.Height - 16) / 2;
//                RadioEditBounds.Width = 16;
//                RadioEditBounds.Height = 16;

//                e.Graphics.DrawRadioButton(RadioEditBounds, true, Layer.IsActive());

//                LayerEditBounds.X = View.WorkingArea.Right - 60;
//                LayerEditBounds.Y = e.Bounds.Y + (e.Bounds.Height - 16) / 2;
//                LayerEditBounds.Width = 16;
//                LayerEditBounds.Height = 16;

//                e.Graphics.DrawGlyphButton(GlyphButtonType.Ellipsis, LayerEditBounds.Left, LayerEditBounds.Top, 16, 16);
//            }
//        }

//        protected override void OnMouseDown(object sender, MouseEventArgs e)
//        {
//            if (TreeView.HasValue())
//            {
//                if (CheckEditBounds.Contains(e.Location))
//                {
//                    OnEnabledChangedClick(sender, e);
//                }
//                else if (RadioEditBounds.Contains(e.Location))
//                {
//                    OnActivateClick(sender, e);
//                }
//                else if (LayerEditBounds.Contains(e.Location))
//                {
//                    View.Application.ShowProperties(Layer);
//                }
//            }
//        }

//        protected override void OnKeyDown(object sender, KeyEventArgs e)
//        {
//            if (TreeView.HasValue() && TreeView.SelectedNode == this)
//            {
//                if (e.KeyCode == Keys.Space)
//                {
//                    OnEnabledChangedClick(sender, e);
//                }
//                else if (e.KeyCode == Keys.Enter)
//                {
//                    OnActivateClick(sender, e);
//                }
//            }
//        }

//        protected void OnActivateClick(object sender, EventArgs e)
//        {
//            Layer.Active();
//            TreeView.Refresh();
//        }

//        protected void OnEnabledChangedClick(object sender, EventArgs e)
//        {
//            Layer.Open = !Layer.Open;
//            TreeView.Refresh();
//            View.Application.ActiveProject.Render();
//        }
//    }
//}
