//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.ComponentModel;
using System.Drawing;
using System.Linq;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace System.Windows.Modules.Controls
{
    internal class PropertiesEdit : GlyphButtonEdit
    {
        public IPropertyDescriptor Property
        {
            get;
            set;
        }

        protected override void OnButtonClick(GlyphButton button, EventArgs e)
        {
            using (var form = new PropertiesForm())
            {
                TabEdit c;

                form.ShowHeader = false;
                form.ShowFooter = false;
                form.Header.Caption = Property.DisplayName;
                form.MinimumSize = new Size(420, 450);
                form.SizeGripStyle = SizeGripStyle.Show;
                form.FormBorderStyle = FormBorderStyle.Sizable;
                form.Footer.DisplayButtons = MessageBoxButtons.OK;
                form.StartPosition = FormStartPosition.Manual;
                form.Body.Controls.Add(c = new TabEdit { Dock = DockStyle.Fill });

                c.TabPages.Clear();

                bool addRoot = Property.ChildProperties.All(item => item.ChildProperties.Count == 0);

                if (addRoot)
                {
                    Property.ChildProperties.ForEach(item => item.IsBrowsable = true);
                    AddPage(c, Property);
                }

                foreach (IPropertyDescriptor item in Property.ChildProperties)
                {
                    AddPage(c, item);
                }

                form.Location = button.PointToScreen(Point.Empty);
                form.ShowDialog(button);

                if (addRoot)
                {
                    Property.ChildProperties.ForEach(item => item.IsBrowsable = false);
                }
            }
        }

        protected bool AddPage(TabEdit c, IPropertyDescriptor property)
        {
            if (property.ChildProperties.Count > 0)
            {
                var page = new TabEditPage(property.DisplayName);

                page.Name = property.Name;
                page.Text = property.DisplayName;
                page.Padding = new Padding(6);
                page.Controls.Add(new PropertyGridEdit { Dock = DockStyle.Fill, SelectedObject = property.ChildProperties });

                c.TabPages.Add(page);

                return true;
            }

            return false;
        }

        [Guid("6F44F455-833B-43A0-8EBD-2D0A34543D7C")]
        protected class PropertiesForm : ApplicationForm
        {
            public PropertiesForm()
            {
                MinimizeBox = false;
                FormBorderStyle = FormBorderStyle.Sizable;
            }
        }
    }
}
