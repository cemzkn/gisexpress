//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Drawing;
using System.Geometries;
using System.Windows.Modules;
using System.Workspace.Drawing;

namespace System
{
    public class ProjectFileInfo : IProjectFileInfo
    {
        public ProjectFileInfo()
        {
        }

        public ProjectFileInfo(IProject project)
        {
            Project = project;
        }

        protected readonly IProject Project;
        protected DirectBitmap PreviewImage;

        public string Template
        {
            get;
            set;
        }

        public string Version
        {
            get { return ApplicationEnvironment.FileVersion.FileVersion; }
            set { }
        }

        public string UserName
        {
            get { return ApplicationEnvironment.UserName; }
            set { }
        }

        public string UserDomainName
        {
            get { return ApplicationEnvironment.UserDomainName; }
            set { }
        }

        public string MachineName
        {
            get { return ApplicationEnvironment.MachineName; }
            set { }
        }

        public string OSVersion
        {
            get { return ApplicationEnvironment.OSVersionString; }
            set { }
        }

        public string CommandLineArgs
        {
            get { return DeveloperEnvironment.CommandLine; }
            set { }
        }

        public Bitmap Preview
        {
            get { return PreviewImage == null ? default : PreviewImage.Image; }
        }

        public string PreviewData
        {
            get
            {
                try
                {
                    IEnvelope e = Project.Workspace.CurrentWindow;

                    if ((e.IsNull() || e.IsEmpty()) == false)
                    {
                        Project.Workspace.CurrentWindow.SetNull();
                        Project.Workspace.CurrentWindow.ExpandToInclude(e = Project.Workspace.Canvas.Graphics.Transform.Bounds);
                    }

                    if ((e.IsNull() || e.IsEmpty()) == false)
                    {
                        Preview.DisposeSafely();
                        PreviewImage = Project.Workspace.Canvas.ToImage(true);
                        return Preview.ReSize(0x100).ToString();
                    }
                }
                catch (Exception e)
                {
                    e.Print();
                }

                return default;
            }
            set
            {
                try
                {
                    PreviewImage.Parse(value);
                }
                catch (Exception e)
                {
                    e.Print();
                }
            }
        }

        public void Dispose()
        {
            PreviewImage.DisposeSafely();
            GC.SuppressFinalize(this);
        }
    }
}
