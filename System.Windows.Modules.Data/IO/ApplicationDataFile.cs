//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Data;

namespace System.Windows.Modules.Data
{
    internal abstract class ApplicationDataFile : ApplicationFileAttribute
    {
        protected ApplicationDataFile()
        {
        }

        protected override void OnBeginRead(ApplicationFileEventArgs e)
        {
            DataConnection connection;

            if (DataProviders.Current.Open(Name, e.FileName, out connection))
            {
                try
                {
                    e.Error = connection.Validate(true);

                    if (e.Error.IsNull())
                    {
                        e.Connection = connection;
                        OnInitializeConnection(e);

                        if (AllowSelectLayers)
                        {
                            throw new NotImplementedException();
                            //e.DataSources = connection.InformationSchema.Tables;

                            //if (e.DataSources.Count > 1)
                            //{
                            //    OnShowLayers(e);
                            //}
                        }
                    }
                }
                finally
                {
                    if (e.Error.HasValue())
                    {
                        connection.Dispose();
                    }
                }
            }
        }

        //protected virtual void OnShowLayers(ApplicationFileEventArgs e)
        //{
        //    using (var dialog = new SelectLayersDialog())
        //    {
        //        dialog.SetLayers(e.DataSources);

        //        if (dialog.ShowDialog(e.Project.Application.Form) == DialogResult.OK)
        //        {
        //            dialog.AcceptChanges(e.DataSources);
        //        }
        //        else
        //        {
        //            e.Cancel = true;
        //        }
        //    }
        //}

        //protected override void OnRead(ApplicationFileEventArgs e)
        //{
        //    //e.Project.View.BeginUpdate();

        //    MapCategory category = e.Project.Workspace.AddNewCategory(Guid.NewGuid(), Path.GetExtension(e.FileName).Trim('.'));

        //    if (category.HasValue())
        //    {
        //        category.Layers.AddRange(OnImportData(e, e.DataSources ?? e.Connection.InformationSchema.Tables).ToArray());
        //    }

        //    //e.Project.View.EndUpdate();
        //}

        //protected virtual IEnumerable<MapLayer> OnImportData(ApplicationFileEventArgs e, IList<SqlTableSource> dataSources)
        //{
        //    if (dataSources.HasValue())
        //    {
        //        foreach (SqlTableSource item in dataSources)
        //        {
        //            yield return OnCreateLayer(e, item);
        //        }
        //    }
        //}

        //protected virtual MapLayer OnCreateLayer(ApplicationFileEventArgs e, SqlTableSource item)
        //{
        //    MapLayer layer = e.Project.Workspace.NewLayer(item.DisplayName);

        //    layer.Id = Guid.NewGuid();
        //    layer.Name = item.DisplayName;

        //    using (var reader = item.Command.ExecuteReader())
        //    {
        //        layer.ImportData(reader);
        //    }
            
        //    //if (!item.DefaultColor.IsEmpty)
        //    //{
        //    //    layer.Styles.Default.PolyStyle.Color = item.DefaultColor;
        //    //}

        //    return layer;
        //}

        protected override void OnRead(IProjectFileInfo info, string fileName)
        {
        }

        protected virtual void OnInitializeConnection(ApplicationFileEventArgs e)
        {
        }
    }
}
