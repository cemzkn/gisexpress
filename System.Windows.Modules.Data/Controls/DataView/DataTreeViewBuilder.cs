//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.ComponentModel;
using System.Data;
using System.Resources;
using System.Windows.Modules.Controls;

namespace System.Windows.Modules.Data.Controls
{
    internal class DataTreeViewBuilder : IDisposable
    {
        public DataTreeViewBuilder(IApplication application)
        {
            Application = application;
            //Application.ProjectCollectionChanged += OnProjectCollectionChanged;
        }

        public readonly IApplication Application;
        public IProjectView View;
        //public DataSetNode DataSet;

        protected void OnProjectCollectionChanged(ProjectEventArgs e, CollectionChangeAction action)
        {
            //if (action == CollectionChangeAction.Add)
            //{
            //    View = e.Project.View;
            //    DataSet = new DataSetNode(this);

            //    View.AddImage(DataSetNode.ID, Images016.DataSet);
            //    View.AddImage(DataConnectionNode.ID, Images016.Database);
            //    View.AddImage(DataTableNode.ID, Images016.DataTable);
            //    View.AddImage(DataTableFieldNode.ID, Images016.DataColumn);

            //    View.ProjectNode.Nodes.Insert(0, DataSet);

            //    e.Project.Workspace.Connections.Changed += OnConnectionsChanged;
            //}
        }

        //protected void OnConnectionsChanged(CollectionChangeAction action, DataConnection connection)
        //{
        //    if (action == CollectionChangeAction.Add)
        //    {
        //        DataSet.AddConnection(connection);
        //    }
        //}

        public void Dispose()
        {
            //View = null;
            //DataSet = null;
            //Application.ProjectCollectionChanged -= OnProjectCollectionChanged;
            GC.SuppressFinalize(this);
        }
    }
}
